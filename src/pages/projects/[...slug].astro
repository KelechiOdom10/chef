---
import { type CollectionEntry, getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import FormattedDate from "@components/FormattedDate.astro";
import { readingTime } from "@lib/utils";
import BackToPrev from "@components/BackToPrev.astro";
import Link from "@components/Link.astro";
import ContactSection from "@components/ContactSection.astro";
import { Image } from "astro:assets";
import svgData from "@data/svgs.json";

export async function getStaticPaths() {
  const projects = (await getCollection("projects"))
    .filter(post => !post.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  return projects.map(project => ({
    params: { slug: project.slug },
    props: project,
  }));
}
type Props = CollectionEntry<"projects">;

const project = Astro.props;
const { Content } = await project.render();

// Function to find matching SVGs
function findMatchingSVGs(techStack: string[]) {
  return svgData.filter(svg =>
    techStack.some(tech => svg.title.toLowerCase() === tech.toLowerCase())
  );
}
const techStack = findMatchingSVGs(project.data?.technologies || []);
---

<PageLayout title={project.data.title} description={project.data.description}>
  <Container>
    <div class="animate">
      <BackToPrev href="/projects"> Back to projects </BackToPrev>
    </div>
    <div class="space-y-1 my-10">
      <div class="animate flex items-center gap-1.5">
        <div class="font-base text-sm">
          <FormattedDate date={project.data.date} />
        </div>
        &bull;
        <div class="font-base text-sm">
          {readingTime(project.body)}
        </div>
      </div>
      <p class="animate text-2xl font-semibold text-black dark:text-white">
        {project.data.title}
      </p>
      {
        project.data.description && (
          <p class="animate">{project.data.description}</p>
        )
      }
      {
        (project.data.demoURL || project.data.repoURL) && (
          <nav class="animate flex gap-1 font-semibold dark:text-white/90">
            {project.data.demoURL && (
              <Link href={project.data.demoURL} external>
                demo
              </Link>
            )}
            {project.data.demoURL && project.data.repoURL && <span>/</span>}
            {project.data.repoURL && (
              <Link href={project.data.repoURL} external>
                repo
              </Link>
            )}
          </nav>
        )
      }
    </div>
    {
      project.data.thumbnail && (
        <div class="animate">
          <Image
            src={project.data.thumbnail}
            alt={project.data.title}
            width={1200}
            height={600}
            class="w-full aspect-video object-cover object-top rounded-lg border dark:border-black/15"
          />
        </div>
      )
    }
    <article class="animate">
      <Content />
    </article>
    {
      techStack.length > 0 && (
        <section class="animate space-y-6 mb-9">
          <div class="flex flex-wrap gap-y-2 items-center justify-between">
            <h5 class="font-semibold text-black dark:text-white">Tech Stack</h5>
          </div>
          <ul class="flex flex-wrap gap-3">
            {techStack.map(tech => (
              <li>
                <Link
                  href={tech.url}
                  external
                  aria-label={tech.title}
                  className="flex relative group p-2 items-center gap-2 no-underline rounded-lg border border-black/15 dark:border-white/20 hover:bg-black/5 dark:hover:bg-white/5 hover:text-black dark:hover:text-white transition-colors duration-300 ease-in-out w-fit"
                >
                  <Image
                    class="hidden dark:block size-4"
                    width={32}
                    height={32}
                    src={
                      typeof tech.route !== "string"
                        ? tech.route.dark
                        : tech.route
                    }
                    alt={tech.title}
                    title={tech.title}
                    loading="eager"
                  />
                  <Image
                    width={32}
                    height={32}
                    class="block dark:hidden size-4"
                    src={
                      typeof tech.route !== "string"
                        ? tech.route.light
                        : tech.route
                    }
                    alt={tech.title}
                    title={tech.title}
                    loading="eager"
                  />
                  <span class="font-semibold text-sm text-black dark:text-white">
                    {tech.title}
                  </span>
                </Link>
              </li>
            ))}
          </ul>
        </section>
      )
    }
    <ContactSection />
  </Container>
</PageLayout>
