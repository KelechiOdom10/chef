---
import { getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import Link from "@components/Link.astro";
import { dateRange } from "@lib/utils";
import { WORK } from "@consts";

const collection = (await getCollection("work")).sort(
  (a, b) =>
    new Date(b.data.dateStart).valueOf() - new Date(a.data.dateStart).valueOf()
);

const work = await Promise.all(
  collection.map(async item => {
    const { Content } = await item.render();
    return { ...item, Content };
  })
);

// Group work experiences by company
const groupedWork = work.reduce<Record<string, (typeof work)[number][]>>(
  (acc, entry) => {
    const company = entry.data.company;
    if (!acc[company]) {
      acc[company] = [];
    }
    acc[company].push(entry);
    return acc;
  },
  {}
);
---

<PageLayout title={WORK.TITLE} description={WORK.DESCRIPTION}>
  <Container>
    <div class="space-y-10">
      <div class="animate font-semibold text-black dark:text-white">Work</div>
      <ul class="flex flex-col space-y-8">
        {
          Object.entries(groupedWork).map(([company, entries]) => (
            <li class="animate group">
              {entries[0].data.website && (
                <Link
                  className="flex items-center space-x-2 mb-2 font-semibold text-black dark:text-white no-underline hover:underline"
                  href={entries[0].data.website}
                  external
                >
                  <span>{company}</span>
                  <svg
                    width="12"
                    height="12"
                    viewBox="0 0 12 12"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M3.5 3C3.22386 3 3 3.22386 3 3.5C3 3.77614 3.22386 4 3.5 4V3ZM8.5 3.5H9C9 3.22386 8.77614 3 8.5 3V3.5ZM8 8.5C8 8.77614 8.22386 9 8.5 9C8.77614 9 9 8.77614 9 8.5H8ZM2.64645 8.64645C2.45118 8.84171 2.45118 9.15829 2.64645 9.35355C2.84171 9.54882 3.15829 9.54882 3.35355 9.35355L2.64645 8.64645ZM3.5 4H8.5V3H3.5V4ZM8 3.5V8.5H9V3.5H8ZM8.14645 3.14645L2.64645 8.64645L3.35355 9.35355L8.85355 3.85355L8.14645 3.14645Z"
                      fill="#eee"
                    />
                  </svg>

                  <span class="sr-only">Visit {company}</span>
                </Link>
              )}

              <ul class="flex flex-col space-y-4">
                {entries.map(entry => (
                  <li class="animate">
                    <div class="flex justify-between items-end">
                      <p class="text-sm font-semibold">{entry.data.role}</p>
                      <p class="text-sm">
                        {dateRange(entry.data.dateStart, entry.data.dateEnd)}
                      </p>
                    </div>
                    <article>
                      <entry.Content />
                    </article>
                  </li>
                ))}
              </ul>
            </li>
          ))
        }
      </ul>
    </div>
  </Container>
</PageLayout>
